CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name  VARCHAR(255)                            NOT NULL,
    email VARCHAR(512)                            NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);


CREATE TABLE IF NOT EXISTS items
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name         VARCHAR(255)                            NOT NULL,
    description  VARCHAR(300)                            NOT NULL,
    is_available BOOLEAN                                 NOT NULL,
    owner_id     BIGINT                                  NOT NULL,
    request_id   BIGINT,
    CONSTRAINT pk_item PRIMARY KEY (id)
);

create table IF NOT EXISTS bookings
(
    id         bigint generated by default as identity not null,
    booker_id  bigint not null,
    end_date   timestamp(6),
    item_id    bigint not null,
    start_date timestamp(6),
    state      varchar(255) check (state in ('ALL', 'FUTURE', 'WAITING', 'PAST', 'REJECTED')),
    status     varchar(255) check (status in ('WAITING', 'APPROVED', 'REJECTED', 'CANCELED')),
    CONSTRAINT pk_booking primary key (id)
);

create table IF NOT EXISTS comments
(
    id        bigint generated by default as identity not null,
    author_id bigint       not null,
    created   timestamp(6) not null,
    item_id   bigint       not null,
    text      varchar(255),
    CONSTRAINT pk_comment primary key (id)
);

create table IF NOT EXISTS item_requests
(
    id           bigint generated by default as identity not null,
    created      timestamp(6) not null,
    requester_id bigint       not null,
    description  varchar(200) not null,
    CONSTRAINT pk_item_request primary key (id)
);

alter table if exists bookings
    add constraint fk_booker foreign key (booker_id) references users;
alter table if exists bookings
    add constraint fk_comment foreign key (item_id) references items;
alter table if exists comments
    add constraint fk_author foreign key (author_id) references users;
alter table if exists comments
    add constraint fk_item foreign key (item_id) references items;
alter table if exists items
    add constraint fk_owner foreign key (owner_id) references users;
alter table if exists items
    add constraint fk_request foreign key (request_id) references item_requests;
alter table if exists item_requests
    add constraint fk_requester foreign key (requester_id) references users;
